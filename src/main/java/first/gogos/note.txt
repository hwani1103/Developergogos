2023-01-25
[구현한거]
페이징 네비게이션 어느정도 구현했다.
지금 게시물 수에 맞게 페이징처리하는거 상당부분 구현했고, 물론 시간을 평소보다 2시간이나 더 썼으니 거의 이틀치를 했지만;;ㅜㅜ
아직 많이남긴했지만 당장 해야될거는 일단 이전게시물 없을떄 < 안보이기, 이후 게시물 없을때 > 안보이기 처리하자
지금 이러나 저러나 보이니까 사실 <는 없을때 처리하기가 쉬운데, >를 없을때 처리하는게 쉽지 않은듯. 그리고 논리적으로도 없어야 맞고..
그래서 그거 일단 처리완료되면. !아 그 게시물에 글 올린거 왜 한개올렸을땐 안보이는건지 모르겠다. 2개 올려야 1개 보이고 3개올려야 2개가 보이네 나중에 해결해야될듯
그리고 일단 이거 처리하면
개별 게시물로 이동하는거? 패쓰베리어블 쓰고 posting.html 수정해가지고 개별 게시물로 이동하는거 구현하면 될것같은데?
지금 페이징에 따라 DB에서 게시물 순차적으로 읽어오는건 구현해놨으니깐..
암튼 화이팅!! 이번주안에 게시판은 다 끝내보자! 최소한 댓글까지는! 댓글달때랑 게시물 볼때 로그인정보랑 다 있어야하니까 상당히 복잡할 수 있음..


일단 처음 boardlist 가면 1부터 10까지 띄워줘야함
1페이지에는 DB의 최신글 20개 보여줘야하고.
board/list/2를 했을땐?
그 다음 20개를 보여줘야됨.
이거 먼저해보자
=====
<랑 > .
< 눌렀을때, 아.. 이제 startpage랑 endpage가 있어야되네..

** @PostConstruct로 public void init() 테스트 데이터 한번 만들어보자 . 이상한데다 만들지말고.
-->@PostConstruct말고 @EventListener(ApplicationReadyEvent.class) 이걸 쓰자. DB2탄강의자료 맨앞부분참고
** MVC1탄 마지막강의 타임리프 보면 페이징할때 URI링크어떻게하면좋을지 타임리프로 어떻게하는지 도움될듯.
아니다 그냥 하다가 혹시 막히면 봐보자. 내가 한것도 잘못된건 아닌듯
URL링크표현식에 쿼리파라미터도 넣을수 있고 상당히 편리하네,영상안보더라도 강의자료 봐서 정리대강 해놓자
**RedirectAttributes. 이것도.. 편리하다는데 언제 써야되려나~ URL인코딩도해주고 PathVariable, 쿼리파라미터까지 처리해준다네
글 쓰고 (Post) redirect get 되어있나? 안돼있네
이거 글 쓰고 어디로 보낼건지 다시 확인하고 컨트롤러 좀 리팩토링해서 하자
지금 글쓰고 새로고침하면 글 계속들어가네

일단 페이징 로직부터 짜고, 그담에 저거 하고
그다음 개별페이지 링크 해서 페이징 마무리하면될것같다.
2023-01-24
[구현한거]
일단 페이징 네비게이션 하드코딩으로 20개씩 정렬해서 화면에 보여주는거 했고
동적으로 페이징 할수있게 html파일에 타임리프 적용해놨음.
이제 컨트롤러에서 로직짜서 메서드 이용해서 nav에서 15를 눌렀을때 11~20의 네비는 유지되면서 15에 해당하는 게시물 20개 보여주기 위한
로직짜고 컨트롤러 정리하는거 해보자. 이거 성공하면 이번 프로젝트의 70%는 달성할것같은데
화이팅!!






일단 20개씩 가져오는거는 JPA로 처리했고
이제 밑에 네비게이션하는게 중요하네
일단 count(*)로 전체 게시물을 가져온다음에..
한번에 10개씩 보여준다면.
boardSize = 200 전체 게시물 200개
navSize = 한 페이지에 보여줄 페이지 수 한 페이지에 10 페이지에 대한 링크를 네비게이션에 보여준다.
pageSize = boardSize / navSize 전체 페이지 수. 20페이지.
첫 네비게이션은 1~10
두번째 네비게이션은 11~20
세번째 21~30
...
191~200
<를 누르면 ? >를 누르면 ?
여기서 쿼리가 나갈 필요가 있나?
일단 네비게이션에 숫자를 누르면 해당 게시물들을 띄워줘야하니까.. findAll메서드랑 동적으로 엮어야겠는데
그럼..일단 숫자를 띄우는거먼저 하자 숫자 띄우면 링크는 쉬울듯
숫자는 반복문으로 띄우자
메서드로.
매개변수 받아서.
1을 받으면 1부터 10
2도 1부터 10
10도 1부터 10

11부터는 11부터 20
navSize를 10으로하고
int[] nav = new int[10]; 한다음에
초기화를 1~10
11~20
21~30 이걸 동적으로 해서 그냥 숫자만 뿌려주고
field그걸로 id도 동적으로 뿌려줘서 pathVariable로 페이지 연결 할수있을까


[구현해야 하는 것들]

개별 게시물로 이동하는거 처리하기.
개별 게시물로 이동하려면 PathVariable을 활용하고
Board의 id를 통해 접근해야 하며, 그 때에는 그 게시물을 작성한 회원의 닉네임정보를 가지고 와야된다.
1.저장된 상태의 Board정보
2.저장된 상태의 Member정보
3.이때 로그인된 회원의 정보와 저장할때의 회원정보는 다를수도 있다.

그담 댓글.
댓글도 마찬가지로 개별 게시물에 접근하는거 먼저 처리 한 다음에
개별 게시물상에서
1.저장된 상태의 Board정보, 저장된 상태의 Member정보
3.현재 로그인중인 회원정보.(로그인중인 회원의 닉네임이 댓글작성하는곳 옆에 나와줘야함.)
4.여태 댓글 단 기록도 있어야하니 저장된상태의 Comment정보도 있어야함.

상당히 어려운 과제들이 남았구만

여기에 이제 페이징처리. 페이징처리 어떻게하는건지 왜 감이 안잡히지
정안되면 스정 페이징하는거 한번 보는것도 좋을듯

설끝나고 월요일부터니까. 이번주안에는 이번 프로젝트 어느정도 갈피는 잡았으면 하는데
정안되면 적어도
자유게시판에 관련한것만큼이라도 싹 완성하자. 페이징, 댓글, 게시물쓰기, 로그인정보
그외 짜잘한 리팩토링해야될것들도 많음.
그러면 그 다음주부터 카드이미지 해서 만들고 장바구니만들고 뭐 그런식으로 해봐도되니까..


일단 board게시판에. 데이터 200개정도 넣는 쿼리를 어따해놓지








URI 통일하자
컨트롤러단에 하나 달고 시작하자 /board /comment /login /member





**주말에 코드 리팩토링하고, 월요일부터 Paging들어갈때 MVC1편에 마지막쪽 타임리프 강의 보면
페이징이랑 URL 텍스트 이런거 핵심적인것들 나오니까 강의랑 강의자료 싹 보면서 하면 수월할것같다.!!

CTRL + N 누르면 클래스파일 다 찾아볼수있음 !!

2023-01-20 14:00
오늘 해야할건 다 했고 내일 리팩토링 할 내용들 정리함.
[내일 리팩토링 해야될것들]
**오전에는 일단 루틴대로 하고. 오후에 MVC JPA 진도 나갈시간을 여기에다 다 쏟자.
**아!! 스정 Git강의 보면서 gitignore랑 각종 간단한 명령어들 익혀야됨!! 이거먼저 1시간정도 해야함
**전체적으로 URI 통일성있게 정리하고, 엔티티 변수명이랑 테이블명도 깔끔하게 한번에 이해되는지 검토
**제일중요한건 컨트롤러 - 서비스 - 레포지토리 영역으로 구분하고, 댓글 작성했을때 닉네임 적용되고 알맞은 게시물 밑에 달리게 해야함.
근데 이거 다 구현하려면 페이징까지 해야할수도 있으니까 하면서 안될것같으면 서비스계층에 메서드 정리만!
서비스계층은 순수 자바코드만 있는게 좋다. DB1탄 트랜잭션쪽에 관련내용 있으니까 봐보자

MVC1편 마지막쪽에 타임리프쪽 강의자료 보면서 해보자. href= 이거 th:href로하면서 경로 설정하는거 적용하자 리팩토링할떄
@PostConstruct : 해당 빈의 의존관계가 모두 주입되고 나면 초기화 용도로 호출된다

보드컨트롤러 - 불필요한 코드 서비스계층으로 전부 넘기고, 양방향 관계 DB에 넣는거 & 객체에 추가하는거 정리
코멘트컨트롤러 - addComment 일단 서비스계층 없어서 어거지로 객체 만들어서 DB에 넣었음. 서비스계층 제대로 구현해서 댓글 작성하기 눌러지면
              그때의 로그인정보를 토대로 회원정보 얻어오고, 게시글 정보 얻어와서(이건 페이징 해야되려나?) 별도 작업 없이 알아서 연관관계 맺어진채
              DB에 적용될수 있게 해야함.
홈컨트롤러 - 자동으로 회원 하나 만들어놓는 로직 하나만 있으니까 그냥 패스
로그인컨트롤러 - 로직이 너무 많으니까 전부 서비스로 빼고, JPA 단건조회 JPQL 정리해둔거에 있으니까 그거 찾아서
              List말고 Member로 받아와서 코드 간단하게 줄이자. 지금 너무 복잡함. 그리고 Validation코드 어떻게 동작하는건지 복습한번 하자
domain 패키지 - 여기있는애들은 한번 검토살짝 하고, 하다보면 문제 생길테니 그때 파악






[구현해야되는거]
board에서 member의 nickname을 테이블에 넣고싶은데.
아 아니다, 객체에만 넣은다음에 객에서 getNickname하면 화면에 띄우는건 되겠는데?
그럼일단 오늘은 그런거 토대로 해서
보드랑 댓글 1개씩 해서
정확하게 띄우고, 링크 걸고, 테이블에 입력하는것까지만 해보자

연관관계 편의메서드는 적었다가 지웠음. 뭐 영속성 컨텍스트, 트랜잭션 문제로 오류생겨서 못했는데 나중에 파악해야됨.
일단. 보드 리스트 화면에서.. 그건 페이징이니까 나중에하고
글 작성하면
글 작성한 포스팅으로 이동하면서, 거기에 내가 지금 올려서 테이블에 반영된 정보들이 나와야함.
글 제목, 작성자, 내용, 시간까지.


2023-01-19
[구현한거]
일단 Board랑 Comment 엔티티 설계 간단하게 했고
게시물 작성하기 눌러서 작성하면, 현재 로그인된 사용자의 ID를 받아와서 보드 테이블에 FK로 집어넣고
게시물 작성하면 새 게시물 하나 그냥 DB 테이블에 입력되는것까지만 했다.
그 입력된걸 토대로 posting.html에 띄워주는거 하다가 안돼서 다시 돌려둠.
왜 안될까? 일단 오늘은 따른거 하느라 시간 많이 투자 못했으니 내일은 빡시게 해보자

**그 토요일에 리팩토링할때, DB1탄 강의자료 트랜잭션쪽에 보면
컨트롤러 서비스 레포지토리계층 어떻게 만들어야되는지 대강 나와있음.

로그인 되어있는 회원의 정보를 다른 엔티티에서 조회한다음 테이블에 insert할 수 있는 방법?
왜냐면 게시글을 작성할 때 해당 회원의 정보가 입력되어야 하니까. 근데 지금 로그인 정보는 session에 있고
session에는 그냥 뭉뚱그려서 돼있는데.봐보자

2023-01-18 15:05
[구현한거]
게시물 리스트랑, 게시물이랑 게시물 작성페이지 각각 html로 만들었고
이동하는거까지 해둠. 이제 페이징이랑, 댓글구현이랑 등등 할거많네

** 연관관계 편의 메서드.!!

** PathVariable 사용방법
ex)

@GetMapping("/members/{memberId}")
public String findMember(@PathVariable("memberId") String data){
    System.out.println(data);
    return "ok";
}
이런식으로 메서드가 정의되어있으면, url에서 요청을 localhost:8080/members/kim 이런식으로 들어오면
1. findMember 메서드랑 맵핑이 된다
2. 맵핑되어 들어오면서 String data변수에 kim이라는 문자열이 바인딩되어 들어온다.
3. /members/{memberId}/orders/{orderNumber} 이렇게한다면
4. @PathVariable("memberId") String Data, @PathVariable("orderNumber") String Data2)
   이런식으로 바인딩하면 된다.
5. 겟맵핑에 URI에 적은 경로변수 이름과 매개변수로 받을 String변수의 이름이 같다면 @PathVariable("") < 이 ""부분은 생략가능하다.
   서로 다를경우에만 명시해서 바인딩해주는것!





[구현해야하는거]
이메일, 닉네임 중복처리
회원가입 시 비밀번호 확인 로직구성.(타임리프에 object: 주는거나 객체 어떻게 설계할건지 등등 복잡함.)

게시물 리스트 뽑아와서 boardlist화면 처리하는거. (페이징)
페이징 유지하면서 개별 게시물 화면 띄워주는거.
(일단 이게 제일 어려울듯)


2023-01-17 17:00
[구현한거]
템플릿 조각 사용해서 헤더영역 조각으로 빼냈따.캬캬
로그인/로그아웃 버튼 보이는거 처리.
실제 로그아웃 해서 세션 삭제하고 로그인 로그아웃 회원가입 버튼 hide구현 끝.
로그아웃하면 홈화면으로.
게시판 리스트 대충 화면 짜고, 게시글 하나 눌렀을때 게시물로 가는거 대충 구현해둠.


로그인 : 로그아웃 버튼만 보여야됨
비로그인 : 로그인이랑 회원가입이 보여야됨.
로그아웃이랑 회원가입을 셋트로 둬야겠네?
로그아웃 하면 세션 사라져서 로그아웃되게 구현.
일단 이 두개먼저해보자




2023-01-16 16:06
[구현한거]
인터셉터 사용해서 게시판 눌렀을때 로그인으로 보내고, 로그인 하면 게시판으로 다시 요청가게
이거밖에 못했다 ㅠ
form action속성 없이 submit하면, 요청 정보를 그대로 가진채로 자기 페이지로 재요청이 들어가는데
이 때 post로 되어있으면 postmapping이 받아서 redirectURL이 살아있어서 게시판으로 보내진것같음.
나중에 확실하게 하자..
오늘 구현 못한건 내일 꼭~!!


인터셉터 사용해서 로그인/로그아웃 버튼 보이는거 처리.
로그아웃 실제 구현.
페이지 자유게시판 페이지만 대충 만든다음 로그인 안하면 못가게 . 로그인 성공했을 시 바로 게시판으로 가게 그런것.



2023-01-15 15:52
[구현한거]
로그인 구현. Email / password 입력안하면 Validation으로 잡기, Email이 없을경우 filedError 추가, 비밀번호가 맞지않을경우 ObjectError 추가.
굳이 필드랑 오브젝트로 어떤 개념상 나눈건 아니고 그냥 하다보니 그렇게 됐고..어쩌다보니 작동이 잘됨. 얻어걸린면도 있고 일단 주석으로 정리해둠.
세션도 일단 적용시킴. 로그인 하면 세션 생성되는걸로.
회원가입 성공하면 회원가입성공 페이지 보여주고 로그인쪽으로 유도하게 성공함.

[구현해야하는거]
인터셉터 사용해서 로그인된상태에서는 로그아웃버튼만 보이고, 비로그인때는 로그인버튼만 보여야함
실제 로그아웃 버튼 누르면 세션삭제 및 로그아웃이 되어야 함.
또 인터셉터로 로그인이 되어있지 않을때 접속할 수 없는 페이지 처리 해야하고
내가 요청한 페이지에서 로그인을 유도할때, 로그인 성공했으면 그 페이지로 바로 가도록.
보니까 모달창처럼 페이지 이동 없이 중복검사라던지 로그인하는 그런거는 AJAX, API, React 이런거랑 짬뽕이 되어야 하는것같다.

이 위에 적힌거 금방 구현하면
게시판 엔티티 설계하고, 멤버랑 관계정의하고, 디자인하고. 구현해보자.



2023-01-13 19:50
[구현한거]
홈화면, 회원가입화면 이동, 회원가입 시 입력안하면 Validation으로 hasErrors이용 스타일추가 및 p태그 추가하는거
회원가입 성공하면 DB에 저장되는거.

[구현해야하는거]
Service계층 만들어야함. --> 이거는 나중에. repository의 메서드만으로 비즈니스가 해결이 안될 때 만들자!
로그인 중복처리 및 이메일 닉네임 중복처리. ---->나중에 !! 타임리프만으로 하기 어려운듯
세션으로 로그인 유지하는거,
로그인 유지되면 로그인버튼은 안보이고
로그아웃버튼만 보이게? 그런식으로 좀더 깔끔하게 해보자,
인터셉터 적용해서 로그인 안된 회원은 특정 게시판 못보게.
requestURI적용해서 로그인후 원하는 화면으로 보내기.
회원가입이 완료되었습니다.


Interface로 만들것들이 뭘까
Service 만들것들도.
MemberService.
일단 필요에 의해서 해야하니까. 그냥 해보자 클래스로
왜냐면 굳이 기능이 간단하고 위임만 한다면
서비스를 만들 필요는 없음 . 비즈니스 로직이 단순히 저장, 검색 이정도면 repository에서만으로도 구현이 가능하니깐.
Interface화 시키는 것도 마찬가지로 일단 첫번쨰 프로젝트는 그런 확장성까지는 내비두고 해보자


일단 멤버폼은 없이 멤버로 해보고.
검증이나 그런거는 다 나중에 추가하고 일단
회원가입.
화면에서 음. input에 값을 입력하면
String으로 두개를 입력해서 post로 전송하면.
RequestParam으로 받나?
일단 회원가입해서 값 받아오는거 먼저 해보자.
form 전송 먼저 그럼 form 전송하면 화면이동이 어떻게되지
일닩 회원가입 form action에서는 일단 멤버컨트롤에서 memebers/new post로 받은담에
redirect :/해서 홈으로 ㄱ